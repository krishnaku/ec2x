import datetime
import os

import boto3

__all__ = [
    'ec2_instance_attributes',
    'export_name_bindings_to_file',
    'export_name_bindings_to_environment',
    'rebind_all',
    'get_ec2_name_bindings',
    'AWS_CONFIG_FILE'
]

# Constants

# Locations
AWS_CONFIG_DIR = os.path.expanduser('~/.aws')
AWS_CONFIG_FILE = os.path.expanduser(AWS_CONFIG_DIR + '/name_bindings')


# Public interface
def ec2_instance_attributes(ec2=None):
    if ec2 is None:
        ec2 = boto3.resource('ec2')

    return \
        [
            {
                'name': get_tag_value(instance, 'Name'),
                'public_dns_name': instance.public_dns_name,
                'id': instance.id

            }
            for instance in ec2.instances.all()
            ]


def get_ec2_name_bindings(ec2=None):
    bindings = {}
    for instance in ec2_instance_attributes(ec2):
        bindings[instance['name']] = instance['public_dns_name']
        bindings[instance['name'] + '_id'] = instance['id']
    return bindings


def export_name_bindings_to_file(ec2=None):
    with open_aws_env_file('w') as name_binding:
        write_file_header(name_binding)
        for key, value in sorted(get_ec2_name_bindings(ec2).iteritems()):
            name_binding.write('export ' + key + '=' + value + '\n')


def export_name_bindings_to_environment(ec2=None):
    for key, value in get_ec2_name_bindings(ec2).iteritems():
        os.environ[key] = value


def rebind_all(ec2=None):
    export_name_bindings_to_file(ec2)
    export_name_bindings_to_environment(ec2)


# Private implementation

def get_tag_value(ec2_instance, tag_name):
    if ec2_instance.tags:
        value = None
        for kv_pair in ec2_instance.tags:
            if kv_pair['Key'] == tag_name:
                value = kv_pair['Value']
        return value


def open_aws_env_file(mode):
    if not os.path.exists(AWS_CONFIG_DIR):
        os.mkdir(AWS_CONFIG_DIR)
    return open(AWS_CONFIG_FILE, mode)


def export_attributes(instance, name_binding):
    name = instance['name']
    if name:
        name_binding.write('# Bindings for ec2 instance: ' + name + '\n')
        name_binding.write('export ' + name + '=' + instance['public_dns_name'] + '\n')
        name_binding.write('export ' + name + '_id=' + instance['id'] + '\n\n')


def write_file_header(f):
    f.write("####\n#   AWS Name Binding File\n#   Generated by aws_utils.name_binding.py at: " + str(
        datetime.datetime.now()) + "\n####\n\n")
